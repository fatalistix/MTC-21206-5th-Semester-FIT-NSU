/*
 * 5) Преобразовать AST дерево арифметических выражений обратно в строковую форму.
 */


import lingo/pegcode/driver;

lingoGrammarOp : ref Maybe<[PegOp]> = ref None();

Expr ::= Int, Add, Mul;
Int(value : int);
Add(l : Expr, r : Expr);
Mul(l : Expr, r : Expr);

lingoGrammar() {
    onlyOnce(lingoGrammarOp, \ -> {
        compilePegGrammar("#include lingo/second.lingo");
    });
}

strToAst(str : string) -> flow {
    parsic(lingoGrammar(), str, defaultPegActions);
}

astToStr(ast: Expr) -> string {
    switch (ast) {
        Int(i): {
            i2s(i);
        }
        Add(l, r): {
            strGlue(["(", astToStr(l), "+", astToStr(r), ")"], "");
        }
        Mul(l, r): {
            strGlue(["(", astToStr(l), "*", astToStr(r), ")"], "");
        }
    };
}

main() {
    ast = strToAst("(((3 + 11) * 2) * (10 + 5))");
    println(astToStr(ast));
    quit(0);
}